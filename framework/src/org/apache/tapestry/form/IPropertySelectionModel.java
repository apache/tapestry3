/* ====================================================================
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2000-2003 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Apache" and "Apache Software Foundation", "Tapestry" 
 *    must not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache" 
 *    or "Tapestry", nor may "Apache" or "Tapestry" appear in their 
 *    name, without prior written permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE TAPESTRY CONTRIBUTOR COMMUNITY
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation.  For more
 * information on the Apache Software Foundation, please see
 * <http://www.apache.org/>.
 *
 */

package org.apache.tapestry.form;

/**
 *  Used by a {@link PropertySelection} to provide labels for options.
 *
 *  <p>The component requires three different representations
 *  of each option:
 *  <ul>
 *  <li>The option value, a Java object that will eventually be assigned to
 *  a property
 *  <li>The label, a String which is incorprated into the HTML to identify the
 *  option to the user
 *  <li>The value, a String which is used to represent the option as the value
 *  of the &lt;option&gt; or &lt;input type=radio&gt; generated by the
 *  {@link PropertySelection}.
 *  </ul>
 *
 *  <p>The option is usually either an {@link org.apache.commons.lang.enum.Enum} 
 *  (see {@link EnumPropertySelectionModel})
 *  or some kind of business object.  The label is often a property of the
 *  option object (for example, for a list of customers, it could be the customer name).
 *
 *  <p>It should be easy to convert between the value and the option.  It may simply
 *  be an index into an array.  For business objects, it is often the primary key
 *  of the object, expressed as a String.
 *
 *  @version $Id$
 *  @author Howard Lewis Ship
 *
 **/

public interface IPropertySelectionModel
{
    /**
     *  Returns the number of possible options.
     *
     **/

    public int getOptionCount();

    /**
     *  Returns one possible option.
     *
     **/

    public Object getOption(int index);

    /**
     *  Returns the label for an option.  It is the responsibility of the
     *  adaptor to make this value localized.
     *
     **/

    public String getLabel(int index);

    /**
     *  Returns a String used to represent the option in the HTML (as the
     *  value of an &lt;option&gt; or &lt;input type=radio&gt;.
     *
     **/

    public String getValue(int index);

    /**
     *  Returns the option corresponding to a value.  This is used when
     *  interpreting submitted form parameters.
     *
     **/

    public Object translateValue(String value);
}