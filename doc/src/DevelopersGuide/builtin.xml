<!-- $Id$ -->

  <chapter id="builtin">
    <title>Builtin Components</title>
    <para>
The Tapestry framework provides a large set of pre-written components to use 
as a starting point for building applications, or more complicated components.
</para>
    <para>
This section will provide a brief overview of the available components and 
their most commonly used parameters.  The Javadoc is the final reference for this information.
</para>
    <para>
Each of these components is automatically added as an alias in 
an application specification.
</para>
    <section id="builtin.Action">
      <title>Action</title>
      <para>
Creates an <sgmltag class="starttag">a</sgmltag> hyperlink in the HTML response.  
If the link is triggered, then the <classname>Action</classname>
 retrieves its listener, and invokes 
<function>actionTriggered()</function> on it.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>listener</term>
          <listitem>
            <para>The object notified if and when the link is triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the link is produced.  If true, the link is not
			created (but wrapped elements are still rendered).
			</para>
          </listitem>
        </varlistentry>
		<varlistentry>
			<term>stateful</term>
			<listitem>
			<para>If true (the default), then the component requires an active &HttpSession; when triggered.
			</para>
			</listitem>
		</varlistentry>      
	  </variablelist>
    </section>
    <section id="builtin.Any">
      <title>Any</title>
      <para>
Used to make an existing HTML element dynamic.  Informal 
parameters are used to fill in the attributes of the element.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>element</term>
          <listitem>
            <para>The element to be produced.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Block">
      <title>Block</title>
      <para>
A block is used to prevent a section of an HTML template from being renderred.  That is,
a <classname>Block</classname> is allowed a body, but never renders it.  Intead, an
&InsertBlock; component is used to insert
the body of the block.
</para>
      <para>
        <classname>Block</classname>s are used to pass arbitrary blocks of HTML and components as parameters
to a component.
</para>
    </section>
    <section id="builtin.Body">
      <title>Body</title>
      <para>
Replaces the <sgmltag class="starttag">body</sgmltag> tag.  
The <classname>Body</classname> component provides support dynamic scripting and image
preloaded, used by other 
components, such as the &Rollover; component.
</para>
    </section>
    <section id="builtin.Checkbox">
      <title>Checkbox</title>
      <para>
Used to implement a checkbox form element (<sgmltag class="starttag">input type=checkbox</sgmltag>). 
Must be wrapped by a &Form;  component.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>selected</term>
          <listitem>
            <para>Indicates whether the checkbox is selected or not.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the text field is active or not.  This attibute is
			ignored by Netscape Navigator 4.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Conditional">
      <title>Conditional</title>
      <para>
Makes part of an HTML template conditional.  
The body of the <classname>Conditional</classname> component is only rendered if a 
specified condition is met.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>condition</term>
          <listitem>
            <para>The condition to be met.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>invert</term>
          <listitem>
            <para>If true, then the condition is inverted. 
			This is useful for simulating an else clause.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Delegator">
      <title>Delegator</title>
      <para>
A component which delegates its behavior (that is, the HTML rendered) 
to some other object.  This is occasionally useful when the HTML 
to render is best generated from pure Java code (or has been provided 
from some source outside of Tapestry).
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>delegate</term>
          <listitem>
            <para>The object which will provide the rendering for the component.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Direct">
      <title>Direct</title>
      <para>
Creates a <sgmltag class="starttag">a</sgmltag> hyperlink that notifies 
the component when the link is triggered.  
The link includes some context-specific data that 
is passed on to the component's listener.  This  
is used in cases where the &Action; component can't be used 
(or is too inefficient).
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>listener</term>
          <listitem>
            <para>Specifies an object that is notified when the link is clicked.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>parameters</term>
          <listitem>
            <para>An array of object values to be encoded in the URL
             and provided to the listener.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the link is produced. If true, the 
			portion of the template the link surrounds is still rendered, but 
			not the link itself.</para>
          </listitem>
        </varlistentry>
        
		<varlistentry>
			<term>stateful</term>
			<listitem>
			<para>If true (the default), then the component requires an active &HttpSession; when triggered.
			</para>
			</listitem>
		</varlistentry>
        
      </variablelist>
    </section>
    <section id="builtin.ExceptionDisplay">
      <title>ExceptionDisplay</title>
      <para>
A component, used on the standard exception page, which renders a detailed list of the exceptions.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>exceptions</term>
          <listitem>
            <para>An array of &ExceptionDescription; objects.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.FieldLabel">
      <title>FieldLabel</title>
      <para>
A component, used with a &ValidField;
that provides the label for the field.  A delegate object may be 
specified that will change the visual formatting of the label to reflect the 
state of the field, for instance, to make the label red when the field itself is in error.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>field</term>
          <listitem>
            <para>The validating text field (type &IField;)
			associated with the label.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>delegate</term>
          <listitem>
            <para>An optional &IValidationDelegate;, responsible for the visual look 
			of the label.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Foreach">
      <title>Foreach</title>
      <para>
A component that loops through a set of values, setting a property 
for each value before rendering its wrapped elements.  The &ListEdit;
component is often more useful if the items are inside a &Form;.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>source</term>
          <listitem>
            <para>The source of objects to be iterated, and array or &List; of objects.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>Used to update the current value on each iteration.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Form">
      <title>Form</title>
      <para>
A component that manages an HTML <sgmltag class="starttag">form</sgmltag>.
The other form-related components must be wrapped inside the <classname>Form</classname>.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>method</term>
          <listitem>
            <para>The value to use for the method attribute of the <sgmltag class="starttag">form</sgmltag>
		 	tag.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>listener</term>
          <listitem>
            <para>The &IActionListener;, informed after the wrapped components of the form 
			have had a chance to respond to the request.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>delegate</term>
          <listitem>
            <para>An &IValidationDelegate; used to handle validation exceptions.  Forms
            that wrap &ValidField;s must bind a delegate.
			</para>
          </listitem>
        </varlistentry>

		<varlistentry>
			<term>stateful</term>
			<listitem>
			<para>If true (the default), then the component requires an active &HttpSession; when triggered.
			</para>
			</listitem>
		</varlistentry>
        
      </variablelist>
    </section>
    
  
      <section id="builtin.Frame">
      <title>Frame</title>
      <para>
Provides the <sgmltag class="starttag">frame</sgmltag> element within
a <sgmltag class="starttag">frameset</sgmltag>.

</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>page</term>
          <listitem>
            <para>The name of the page to display in the frame.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  
    
        <section id="builtin.GenericLink">
      <title>GenericLink</title>
      <para>
Creates a <sgmltag class="starttag">a</sgmltag> hyperlink for an
arbitrary URL.  Although this can be accomplished using an &Any; component,
a GenericLink is more flexible: it can be disabled (like a &Direct; or &Action;)
and can also wrap around &Rollover; components.  GenericLinks are often used
with <filename>javascript:</filename> URLs to perform client-side scripting.
</para>
      <variablelist>
        <title>Parameters</title>

        
		<varlistentry>
			<term>href</term>
			<listitem>
			<para>The URL to trigger when the link is clicked.
			</para>
			</listitem>
		</varlistentry>
		
				<varlistentry>
	<term>disabled</term>
	  <listitem>
            <para>Controls whether the link is produced. If true, the 
			portion of the template the link surrounds is still rendered, but 
			not the link itself.</para>
          </listitem>
        </varlistentry>

        
      </variablelist>
    </section>
    
    
    <section id="builtin.Hidden">
      <title>Hidden</title>
      <para>
Adds a hidden (<sgmltag class="starttag">input type=hidden</sgmltag>) field to a 
&Form;.  This is often used to synchronize 
data when the form is submitted with values
known when the page was rendered .
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>Property to store when the form is renderred and to 
			restore when the form is submitted.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Image">
      <title>Image</title>
      <para>
Used to insert a static image.  &Rollover; is a similar component that can create
dynamic mouse-over effects as well.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>image</term>
          <listitem>
            <para>The image to show, specified as an asset.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.ImageSubmit">
      <title>ImageSubmit</title>
      <para>
An image button inside a &Form;.  Clicking the button submits the form.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>If true, the image button will be disabled (not respond to the mouse).</para>
            <para>The disabled attribute is ignored by Netscape Navigator 4.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image</term>
          <listitem>
            <para>The default image to display.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>selected</term>
          <listitem>
            <para>A property updated if the button is clicked.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>tag</term>
          <listitem>
            <para>The value assigned to the selected property if the button is clicked.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Insert">
      <title>Insert</title>
      <para>
Inserts dynamic text into the HTML response.   Invalid characters (such as &lt; and &gt;) 
are converted into HTML entities ('&amp;lt;' and '&amp;gt;').  Use an &InsertText; component
to handle multi-line text.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>The value to be inserted, which may be a &String; or an 
			arbitrary object (that is converted to a String;).
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>format</term>
          <listitem>
            <para>A format (<classname>java.text.Format</classname>) object used to format 
			the &String; or object.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.InsertBlock">
      <title>InsertBlock</title>
      <para>
Inserts the body of a &Block;.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>block</term>
          <listitem>
            <para>The &Block; to insert.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.InsertText">
      <title>InsertText</title>
      <para>
Inserts multiline text, adding <sgmltag class="starttag">p</sgmltag> tags around each line,
or inserting <sgmltag class="starttag">br</sgmltag> tags between each line.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>text</term>
          <listitem>
            <para>The text to insert.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>mode</term>
          <listitem>
            <para>Identifies how to break apart lines for display.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.InsertWrapped">
      <title>InsertWrapped</title>
      <para>
Renders the static HTML and components wrapped by the container of the 
<classname>InsertWrapped</classname> component.  Components 
which have HTML templates and can wrap other elements should 
include exactly one <classname>InsertWrapped</classname> component in their template.
</para>
    </section>
    <section id="builtin.ListEdit">
      <title>ListEdit</title>
      <para>
Similar to a &Foreach;, this component must be wrapped by
a &Form;.  It provides the iteration of the &Foreach; but helps to avoid stale link
exceptions by recording the number of items in its source, as well as an encoding of
each value, as hidden fields in the form.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>source</term>
          <listitem>
            <para>The source of objects to be iterated, and array or &List; of objects.
			This is only accessed when the containing page is renderred, not when the
			containing form is rewound.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>Used to update the current value on each iteration.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Option">
      <title>Option</title>
      <para>
Implements a component that manages an HTML
<sgmltag class="starttag">option</sgmltag> form element, and must 
be wrapped by a &Select; component.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>selected</term>
          <listitem>
            <para>Used to indicate whether the given option is selected.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Page">
      <title>Page</title>
      <para>
Creates a hyperlink to another page within the application.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>page</term>
          <listitem>
            <para>The name of a page to link to.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the link is produced. If true, the portion of 
			the template the link surrounds is still rendered, but not the link itself.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.PropertySelection">
      <title>PropertySelection</title>
      <para>
Creates form elements that allow a property of an object to be selected.  This may take the form
of a <sgmltag class="starttag">select</sgmltag> or a sequence 
of <sgmltag class="starttag">input type=radio</sgmltag> elements.
</para>
      <para>
Uses a model to map between Java values that will be assigned, and 
textual labels that will appear in the HTML response.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>The property value to edit.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>model</term>
          <listitem>
            <para>The model used to enumerate the potential values, and 
			to produce text labels for each value.
		</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>renderer</term>
          <listitem>
            <para>
An object used to render the property selection; two default implementations are 
provided (one creates a pop up list, the other a table of radio buttons).
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Radio">
      <title>Radio</title>
      <para>
A component used to manage an HTML radio form element.
Such a component must be wrapped (possibly indirectly) inside a 
&RadioGroup; component.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>
				The value to be assigned through the 
				&RadioGroup;'s selected parameter, if the 
				<classname>Radio</classname> is selected by the user.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>
				If true, then the <classname>Radio</classname> is disabled. It will write a 
				disabled attribute into its tag when rendering, and will 
				not update its selected binding.
			</para>
            <para>
				The disabled attribute is ignored by Netscape Navigator 4.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.RadioGroup">
      <title>RadioGroup</title>
      <para>
A container of &Radio; components, which itself must be 
within a &Form; component.  
The <classname>RadioGroup</classname> and &Radio; components 
combined provide similar functionality to the 
&PropertySelection; component (though with some greater flexibility).
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>selected</term>
          <listitem>
            <para>The property to be updated by the 
			&Radio; button is selected by the user.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Rollover">
      <title>Rollover</title>
      <para>
Works with any kind of link component, which must wrap it, 
to provide a rollover image button ... a button where the 
image changes when the mouse move over it or off of it.  
A <classname>Rollover</classname> is disabled if the link that wraps it is disabled
(in which case it doesn't respond to the mouse).  Use the simpler
&Image; component is dynamic behavior isn't required.
</para>
      <para>
The component provides all the necessary JavaScript to swap the image when the mouse
enters and exits the button.  However, the <classname>Rollover</classname> must be wrapped
(ultimately) by a &Body; component.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>image</term>
          <listitem>
            <para>The (initial) image to show (if not disabled).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>focus</term>
          <listitem>
            <para>The image displayed when the mouse moves over the 
			button (unless disabled).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>blur</term>
          <listitem>
            <para>The image displayed when the mouse moves off of 
			the button (unless disabled).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>The image displayed if the link is itself disabled.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Script">
      <title>Script</title>
      <para>
A component that accesses a script file and adds JavaScript functions and statements 
to the response page.  The specified script file is read and parsed and 
substitutions are made before the final scripting code is inserted into the page.  This
allows the JavaScript to be tailored to the ids and names that are generated by Tapestry.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>script</term>
          <listitem>
            <para>The resource path of the script file.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Select">
      <title>Select</title>
      <para>
A component which creates a <sgmltag class="starttag">select</sgmltag> form element (it is
also a wrapper around &Option;  components), within a &Form;.
</para>
      <para>
It is generally easier to use a &PropertySelection; unless multiple selections
are desired.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>multiple</term>
          <listitem>
            <para>If true, the component allows multiple selection.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Service">
      <title>Service</title>
      <para>
A component for creating a link for an arbitrary engine service 
that uses no parameters, such as the reset or home service.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>service</term>
          <listitem>
            <para>The name of the service.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the link is produced. If true, 
			the portion of the template the link surrounds is still rendered, 
			but not the link itself.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Shell">
      <title>Shell</title>
      <para>
Provides the outer "shell" of a page, including the 
<sgmltag class="starttag">html></sgmltag>, 
<sgmltag class="starttag">head</sgmltag> and <sgmltag class="starttag">title</sgmltag> tags 
(but not the <sgmltag class="starttag">body</sgmltag> tag) (which is typically provided by a &Body;
component).
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>title</term>
          <listitem>
            <para>Title for the page, placed within a <sgmltag class="starttag">title</sgmltag> element.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>stylesheet</term>
          <listitem>
            <para>Stylesheet to be used for the page.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Submit">
      <title>Submit</title>
      <para>
Provides a form submit button (&lt;input type=submit&gt;).  
This is most useful when the form contains multiple submit buttons and the 
application needs to know which was actually pressed.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>If true, the submit button will be 
			disabled.</para>
            <para>The disabled attribute is ignored by Netscape Navigator 4).
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>label</term>
          <listitem>
            <para>The label to put on the button.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>selected</term>
          <listitem>
            <para>A property updated if the button is the one clicked 
			to submit the form.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>tag</term>
          <listitem>
            <para>The value applied to the selected property if the button 
			is the one clicked to submit the form.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.ShowInspector">
      <title>ShowInspector</title>
      <para>
Adds a link to a page that is used to raise the 
<link linkend="inspector">Tapestry Inspector</link> in a new window.  
This is generally added to the navigational border of an application, and is only enabled
when developing the application (disabled in deployment).
</para>
    </section>
    <section id="builtin.Text">
      <title>Text</title>
      <para>
Implements a component that manages an HTML <sgmltag class="starttag">textarea</sgmltag> form element, 
within a &Form; component.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>The text inside the text area.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>
				Controls whether the <classname>Text</classname> is active or not.
			</para>
            <para>The disabled attribute is ignored by 
				Netscape Navigator 4.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>columns</term>
          <listitem>
            <para>The width of the <sgmltag class="starttag">textarea</sgmltag>, in characters.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>rows</term>
          <listitem>
            <para>The number of rows in the <sgmltag class="starttag">textarea</sgmltag>.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.TextField">
      <title>TextField</title>
      <para>
Implements a component that manages an HTML 
<sgmltag class="starttag">input type=text</sgmltag> or 
<sgmltag class="starttag">input type=password</sgmltag> form element, within a 
&Form; component.
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>The text inside the text field.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>hidden</term>
          <listitem>
            <para>If true, then the text field is written as a 
			<sgmltag class="starttag">input type=password</sgmltag> form element.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the text field is active or not.  Netscape Navigator 4
			ignores the disabled attribute.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>displayWidth</term>
          <listitem>
            <para>Controls the display width of the text control in the client browser.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>maximumLength</term>
          <listitem>
            <para>Controls the maximum number of characters that the 
			text control will accept.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.Upload">
      <title>Upload</title>
      <para>
    A form element used to handle file uploads.  The uploaded file is represented
    by an instance of &IUploadFile;.
    </para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>file</term>
          <listitem>
            <para>The &IUploadFile; (representing the content of the file provided
            by the client).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the text field is active or not.  Netscape Navigator 4
			ignores the disabled attribute.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="builtin.ValidField">
      <title>ValidField</title>
      <para>
An improved &TextField; that can perform simple validations and translations
between a string representation (used in the client web browser) and
an object representation.  
</para>
      <variablelist>
        <title>Parameters</title>
        <varlistentry>
          <term>value</term>
          <listitem>
            <para>The object value editted by field.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>hidden</term>
          <listitem>
            <para>If true, then the text field is written as a 
			<sgmltag class="starttag">input type=password</sgmltag> form element.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>displayName</term>
          <listitem>
            <para>
A name for the the component, used when formulating error messages.
</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>validator</term>
          <listitem>
            <para>An &IValidator; used to convert between string and object
 					representations.  The validator may also enforce rules on the
 					input value, such as minimum and maximums, or to make the
 					value required.
 				</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disabled</term>
          <listitem>
            <para>Controls whether the text field is active or not.  Netscape Navigator 4
			ignores the disabled attribute.
			</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>displayWidth</term>
          <listitem>
            <para>Controls the display width of the text control in the client browser.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>maximumLength</term>
          <listitem>
            <para>Controls the maximum number of characters that the 
			text control will accept.
			</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>