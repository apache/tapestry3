<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>
<!-- $Id$ -->

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  JBoss Server Configuration                                           -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

  <!--
     | The Classpath element is needed for http based installations 
     | we need to list all the archives that the server needs at boot
     | if the installation is local and the configuration is from file
     | then there is no need to list the files and it should commented
   -->
  <classpath codebase="lib" archives="*"/>

  <!-- ==================================================================== -->
  <!-- Log4j Initialization                                                 -->
  <!-- ==================================================================== -->
  <mbean code="org.jboss.logging.Log4jService"
    name="jboss.system:type=Log4jService,service=Logging">
    <attribute name="ConfigurationURL">resource:log4j.xml</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Class Loading                                                        -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.web.WebService"
	 name="jboss:service=Webserver">
    <attribute name="Port">8083</attribute>
    <!-- Should resources and non-EJB classes be downloadable -->
    <attribute name="DownloadServerClasses">true</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- JSR-77 Single JBoss Server Management Domain                         -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.management.j2ee.SingleJBossServerManagement"
	 name="jboss.management.single:j2eeType=J2EEDomain,name=Manager" >
  </mbean>

  <!-- ==================================================================== -->
  <!-- JNDI                                                                 -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.naming.NamingService"
	 name="jboss:service=Naming">
    <attribute name="Port">1099</attribute>
  </mbean>
  <mbean code="org.jboss.naming.JNDIView" 
	 name="jboss:service=JNDIView"/>

  <!-- ==================================================================== -->
  <!-- Security                                                             -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.security.plugins.SecurityConfig"
	 name="jboss.security:name=SecurityConfig">
    <attribute name="LoginConfig">jboss.security:name=XMLLoginConfig</attribute>
  </mbean>
  <mbean code="org.jboss.security.auth.login.XMLLoginConfig"
	 name="jboss.security:name=XMLLoginConfig">
    <attribute name="ConfigResource">login-config.xml</attribute>
  </mbean>

  <!-- JAAS security manager and realm mapping -->
  <mbean code="org.jboss.security.plugins.JaasSecurityManagerService"
	 name="jboss.security:name=JaasSecurityManager">
    <attribute name="SecurityManagerClassName">
      org.jboss.security.plugins.JaasSecurityManager
    </attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Transactions                                                         -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.tm.TransactionManagerService" 
	 name="jboss:service=TransactionManager">
    <attribute name="TransactionTimeout">300</attribute>

    <!-- Use this attribute if you need to use a specific Xid
         implementation
    <attribute name="XidClassName">oracle.jdbc.xa.OracleXid</attribute>
    -->
  </mbean>

  <!-- 
     | Uncomment to use Tyrex (tyrex.exolab.org) transaction manager plugin
     | instead of the org.jboss.tm.TransactionManagerService and comment out
     | the TransactionManagerService above.
     | Make sure you have Xerces in lib/. At the moment JBoss does not
     | ship Xerces as part of distribution. Version 1.x seems to work fine,
     | though 2.x should as well, use whichever you like.
     |
  <mbean code="org.jboss.tm.plugins.tyrex.TransactionManagerService"
         name="jboss:service=TransactionManager">
        <attribute name="ConfigFileName">../conf/default/domain.xml</attribute>
  </mbean>
  -->

  <mbean code="org.jboss.tm.usertx.server.ClientUserTransactionService"
	 name="jboss:service=ClientUserTransaction">
  </mbean>

  <!-- The CachedConnectionManager is used partly to relay started UserTransactions to 
    open connections so they may be enrolled in the new tx-->
  <mbean code="org.jboss.resource.connectionmanager.CachedConnectionManager" name="jboss.jca:service=CachedConnectionManager">
  </mbean>


  <!-- ==================================================================== -->
  <!-- The deployers...                                                     -->
  <!-- ==================================================================== -->

  <!-- Main Deployer and SARDeployer are provided by main -->

  <!-- EJB deployer, remove to disable EJB behavior-->
  <mbean code="org.jboss.ejb.EJBDeployer" name="jboss.ejb:service=EJBDeployer">
    <attribute name="VerifyDeployments">true</attribute>
    <attribute name="ValidateDTDs">false</attribute>
    <attribute name="MetricsEnabled">false</attribute>
    <attribute name="VerifierVerbose">true</attribute>
    <attribute name="BeanCacheJMSMonitoringEnabled">false</attribute>
  </mbean>
  
  <!-- EAR deployer, remove if you are not using Web layers -->
  <mbean code="org.jboss.deployment.EARDeployer" name="jboss.j2ee:service=EARDeployer">
  </mbean>
  
  <!-- WAR Deployer is provided by tomcat or jetty -->
  <!-- RAR Deployer is provided by the rar.sar package -->


  <!-- ==================================================================== -->
  <!-- JBoss Server Management                                              -->
  <!-- ==================================================================== -->

  <!-- AS Temporary not available
  <mbean code="org.jboss.management.ServerDataCollector"
         name="jboss.management:service=Collector">
    <attribute name="RefreshSleep">5000</attribute>
  </mbean>
  -->

  <!-- ==================================================================== -->
  <!-- Monitoring and Management                                            -->
  <!-- ==================================================================== -->

  <!-- Uncomment to enable JMX monitoring of the bean cache
  <mbean code="org.jboss.monitor.BeanCacheMonitor" 
         name="jboss.jmx:name=BeanCacheMonitor"/>
  -->

  <!-- ==================================================================== -->
  <!-- Invokers to the JMX node                                             -->
  <!-- ==================================================================== -->

  <!-- RMI/JRMP invoker -->
  <mbean code="org.jboss.invocation.jrmp.server.JRMPInvoker" 
         name="jboss:service=invoker,type=jrmp">
    <attribute name="RMIObjectPort">4444</attribute>
    <!--
    <attribute name="RMIClientSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketAddr">custom</attribute>
    -->
  </mbean>
  
  <mbean code="org.jboss.invocation.local.LocalInvoker" 
         name="jboss:service=invoker,type=local">
  </mbean>

  <!-- ==================================================================== -->
  <!-- Deployment Scanning                                                  -->
  <!-- ==================================================================== -->

  <!-- Uncomment to enable caching of deployment units
  <mbean code="org.jboss.deployment.cache.FileDeploymentStore"
	 name="jboss.deployment:type=DeploymentStore,flavor=File">
    <attribute name="DirectoryName">data/deployment-cache</attribute>
  </mbean>

  <mbean code="org.jboss.deployment.cache.DeploymentCache"
	 name="jboss.deployment:type=DeploymentCache">
    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>
    <depends optional-attribute-name="Store">jboss.deployment:type=DeploymentStore,flavor=File</depends>
  </mbean>
  -->


  <!--  Use URLDirectoryScanner if you need to specify which urls are
        directories to scan, and which are urls to be deployed directly.
        URLDeploymentScanner assumes that all directories are to be scanned,
        which can cause problems if you deploy exploded archives.
  -->
  <mbean code="org.jboss.deployment.scanner.URLDeploymentScanner"
	 name="jboss.deployment:type=DeploymentScanner,flavor=URL">
  <!--
  <mbean code="org.jboss.deployment.scanner.URLDirectoryScanner"
         name="jboss.deployment:type=DeploymentScanner,flavor=URL">
  -->

    <!-- Uncomment (and comment/remove version below) to enable usage of the DeploymentCache
    <depends optional-attribute-name="Deployer">jboss.deployment:type=DeploymentCache</depends>
    -->
    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>

    <!-- The URLComparator can be used to specify a deployment ordering
         for deployments found in a scanned directory.  The class specified
         must be an implementation of java.util.Comparator, it must be able
         to compare two URL objects, and it must have a no-arg constructor.
         Two deployment comparators are shipped with JBoss:
           - org.jboss.deployment.DeploymentSorter 
             Sorts by file extension, as follows:
               "sar", "service.xml", "rar", "jar", "war", "wsr", "ear", "zip", 
               "*"
           - org.jboss.deployment.scanner.PrefixDeploymentSorter
             If the name portion of the url begins with 1 or more digits, those 
             digits are converted to an int (ignoring leading zeroes), and 
             files are deployed in that order.  Files that do not start with 
             any digits will be deployed last, and they will be sorted by
             extension as above with DeploymentSorter.
    -->
    <attribute name="URLComparator">org.jboss.deployment.DeploymentSorter</attribute>
    <!--
    <attribute name="URLComparator">org.jboss.deployment.scanner.PrefixDeploymentSorter</attribute>
    -->

    <!-- The Filter specifies a java.io.FileFilter for scanned
         directories.  Any file not accepted by this filter will not be
         deployed.  The org.jboss.deployment.scanner.DeploymentFilter 
         rejects the following patterns:
             "#*", "%*", ",*", ".*", "_$*", "*#", "*$", "*%", "*.BAK", 
             "*.old", "*.orig", "*.rej", "*.bak", "*,v", "*~", ".make.state", 
             ".nse_depinfo", "CVS", "CVS.admin", "RCS", "RCSLOG", "SCCS", 
             "TAGS", "core", "tags"
    -->
    <attribute name="Filter">org.jboss.deployment.scanner.DeploymentFilter</attribute>

    <attribute name="ScanPeriod">5000</attribute>

    <!-- 
       | URLs are comma seperated and unprefixed arguments are considered
       | file URLs and resolve relative to server home unless the given path
       | is absolute.  Comment this out if using URLDirectoryScanner.
     -->
    <attribute name="URLs">
       ./deploy
    </attribute>
    <!-- Use this for URLDirectoryScanner.  Each entry specifies either a
         dir (directory to be scanned), or url (url to be deployed).  Like
         the URLs for the DeploymentScanner above, a file: protocol will
         be assumed if not specified otherwise.  Uncomment for use with
         URLDirectoryScanner .
    -->
    <!--
    <attribute name="URLs">
        <urls>
            <dir name="./deploy" />
            <url name="./deploy/examples/myapp.ear" />
            <dir name="./deploy/examples" />
            <url name="http://www.test.com/samples/myapp.ear" />
        </urls>
    </attribute>
    -->
  </mbean>

</server>
