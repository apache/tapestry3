<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<server>

  <!-- ==================================================================== -->
  <!-- Web Container                                                        -->
  <!-- ==================================================================== -->

  <!--
     | Be sure to check that the configuration values are valid for your
     | environment.
   -->

  <mbean code="org.jboss.jetty.JettyService" name="jboss.web:service=Jetty">

    <!-- ================================================================= -->
    <!-- Uncomment the following line ONLY if you want to provide a custom -->
    <!-- webdefault.xml file in place of the standard one. Place your      -->
    <!-- file in the src/etc directory to have it automatically included   -->
    <!-- in the build.                                                     -->
    <!-- ================================================================= -->

    <!--
    <attribute name="WebDefault">webdefault.xml</attribute>
    -->

    <!-- ================================================================== -->
    <!-- If true, .war files are unpacked to a temporary directory. This    -->
    <!-- is useful with JSPs.                                               -->
    <!-- ================================================================== -->

    <attribute name="UnpackWars">true</attribute>

    <!-- ================================================================== -->
    <!-- If true, Jetty first delegates loading a class to the webapp's     -->
    <!-- parent class loader (a la Java 2). If false, Jetty follows the     -->
    <!--  Servlet 2.3 specification, and tries the webapp's own loader      -->
    <!-- first (for "non-system" classes)                                   -->
    <!-- ================================================================== -->

    <attribute name="Java2ClassLoadingCompliance">true</attribute>

    <!-- ================================================================= -->
    <!-- Configuring Jetty. The XML fragment contained in the              -->
    <!-- name="ConfigurationElement" attribute is a Jetty-style            -->
    <!-- configuration specification.  It is used to configure Jetty with  -->
    <!-- a listener on port 8080, and a HTTP request log location.         -->
    <!-- The placement here of other Jetty XML configuration statements    -->
    <!-- for deploying webapps etc is not encouraged: if you REALLY NEED   -->
    <!-- something extra, place it in WEB-INF/jetty-web.xml files          -->
    <!-- ================================================================= -->

    <attribute name="ConfigurationElement">
      <Configure class="org.mortbay.jetty.Server">

          <!-- ======================================================= -->
	  <!-- Add the listener                                        -->
          <!-- ======================================================= -->
          <Call name="addListener">
            <Arg>
             <New class="org.mortbay.http.SocketListener">
              <Set name="Port"><SystemProperty name="jetty.port" default="80"/></Set>
              <Set name="MinThreads">5</Set>
              <Set name="MaxThreads">255</Set>
              <Set name="MaxIdleTimeMs">30000</Set>
              <Set name="MaxReadTimeMs">10000</Set>
              <Set name="MaxStopTimeMs">5000</Set>
              <Set name="LowResourcePersistTimeMs">5000</Set>
              </New>
            </Arg>
          </Call>

          <!-- ======================================================= -->
	  <!-- Add the HTTP request log                                -->
          <!-- ======================================================= -->
          <Set name="RequestLog">
            <New class="org.mortbay.http.NCSARequestLog">
              <Arg><SystemProperty name="jboss.server.home.dir"/><SystemProperty name="jetty.log" default="/log"/>/yyyy_mm_dd.request.log
	      </Arg>
              <Set name="retainDays">90</Set>
              <Set name="append">true</Set>
              <Set name="extended">true</Set>
              <Set name="LogTimeZone">GMT</Set>
            </New>
          </Set>

          <!-- ======================================================= -->
          <!-- Uncomment and set at least the Keystore, Password and   -->
	  <!-- KeyPassword fields to configure an SSL listener         -->
          <!-- ======================================================= -->
	  <!--
           <Call name="addListener">
             <Arg>
               <New class="org.mortbay.http.SunJsseListener">
                 <Set name="Port">8443</Set>
                 <Set name="MinThreads">5</Set>
                 <Set name="MaxThreads">255</Set>
                 <Set name="MaxIdleTimeMs">30000</Set>
                 <Set name="MaxReadTimeMs">10000</Set>
                 <Set name="MaxStopTimeMs">5000</Set>
                 <Set name="LowResourcePersistTimeMs">2000</Set>
                 <Set name="Keystore"><SystemProperty name="jetty.home" default="."/>/etc/demokeystore</Set>
                 <Set name="Password">dummy</Set>
                 <Set name="KeyPassword">dummy</Set>
               </New>
             </Arg>
           </Call>
          -->
          
		  <Call name="addContext">
		    <Arg>/doc/*</Arg>
		    <Set name="ResourceBase">@user.dir@/doc</Set>
		    <Set name="ServingResources">TRUE</Set>
		  </Call>
		    
		   <Call name="addContext">
		    <Arg>/</Arg>
		    <Set name="ResourceBase">@user.dir@/web</Set>
		    <Set name="ServingResources">TRUE</Set>
		    <Call name="getResourceHandler">
			<Call name="addIndexFile">
				<Arg>extranet.html</Arg>
			</Call>
		    </Call>
		    <Set name="RedirectNullPath">TRUE</Set>
		  </Call>
		
		 <Call name="addContext">
		    <Arg>/private/*</Arg>
		    <Set name="ResourceBase">../server/tapestry/tmp/private</Set>
		    <Set name="ServingResources">TRUE</Set>
		 </Call>
          
      </Configure>
     </attribute>

    <!-- ================================================================= -->
    <!-- Options for distributed session management are:                   -->
    <!--     org.jboss.jetty.session.CoarseDistributedStore                -->
    <!--     org.jboss.jetty.session.ClusteredStore                        -->
    <!-- ================================================================= -->

    <attribute name="HttpSessionStorageStrategy">org.jboss.jetty.session.ClusteredStore</attribute>

    <!-- ================================================================= -->
    <!-- Options for synchronizing distributed sessions:                   -->
    <!--     never/idle/request/<num-seconds>                              -->
    <!-- ================================================================= -->

    <attribute name="HttpSessionSnapshotFrequency">never</attribute>

    <!-- ================================================================= -->
    <!-- Options for the notification of HttpSessionActivationListeners    -->
    <!-- around snapshotting are:                                          -->
    <!--    neither                                                        -->
    <!--    activate                                                       -->
    <!--    passivate                                                      -->
    <!--    both                                                           -->
    <!-- ================================================================= -->

    <attribute name="HttpSessionSnapshotNotificationPolicy">neither</attribute>

    <!-- ================================================================= -->
    <!-- If you require JAAS authentication, configure the name of the     -->
    <!-- attribute in which you expect to find the JAAS active subject:    -->
    <!--                                                                   -->
    <!-- Commenting out this configuration will disable JAAS support       -->
    <!-- ================================================================= -->

    <attribute name="SubjectAttributeName">j_subject</attribute>

  </mbean>

  <!-- ==================================================================== -->
  <!-- ==================================================================== -->

</server>
